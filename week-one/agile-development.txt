# Production Problem 1: Establishing an agile development environment

## The Problem

There is no IDE for web development. You need to assemble your own. For this
class, to start, you will need three items. First, find and install at least one
plain-text editor that can handle Unicode (UTF-8) encoding, Unix-style line
endings (LF), and syntax highlighting for the three languages we’ll write most
in this class: HTML, CSS, and JavaScript. You'll need it to write out the file
for this first Production Problem. Configure your editor to default to Unicode
and Unix-style line endings, if necessary. Looking for suggestions? Hit up the
Campfire chatroom in our class Basecamp site.

Second, you will need a version control system. We will be using Git. You’ll
either want to install Git using a package manager (e.g., aptitude on Debian,
yum on CentOS, Homebrew on OS X) or compile it yourself from source. **Do not**
just download and install a binary from the Web.

You will also need at minimum to configure Git with your name and email address.
**Do not** just download and install a binary from the Web. From there, you will
need to set up and interact with your GitHub account.

Third and finally, we will be using a bunch of different developer tools built
on top of Node.js. Like Git, you should either install Node via a package
manager or compile it yourself from source. Depending on your installation
method, you might also have to install the Node Package Manager, npm.

Need help or get stuck? Try the Campfire chatroom, or Ping the instructor, on
Basecamp.

## Resources & Hints

* Git Configuration:
https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration

* Setting Up SSH Keys on GitHub:
https://help.github.com/articles/generating-ssh-keys/

* The Git Community Book: https://git-scm.com/book/en/v2

* Node.js: http://nodejs.org/

* Installing Node.js via Package Manager:
    https://nodejs.org/en/download/package-manager/

## Deliverables

You must fork this repository from GitHub to your own account, clone it to your
computer, and edit this file.

**You should must create a separate commit for each of the following steps.**
Text between backticks are commands to run in your command-line shell.

First, you need to install Git, if you don’t have it already.

1. Copy below the output from `git version`:
[user1@localhost ~]$ git version
git version 1.9.3


2. Copy below the output from `git config --global --list`:
[root@localhost ~]# git config --global --list
user.name=Daria Riley
user.email=driley3@hawk.iit.edu
[root@localhost ~]# 



You also need to set up your public/private keypair with GitHub. Once you’ve
done that, do the following:

3. Copy below the output from `ssh git@github.com`:
[root@localhost ~]# ssh git@github.com
Enter passphrase for key '/root/.ssh/id_rsa': 
PTY allocation request failed on channel 0
Hi RileyDaria! You've successfully authenticated, but GitHub does not provide shell access.
Connection to github.com closed.
[root@localhost ~]# 


Clone your fork of this repository. Then, on your computer, add a remote
referencing my copy of the repository as the upstream rep by running
`git remote add upstream https://github.com/karlstolley/itmd362-pp.git`
[root@localhost ~]# git remote add upstream https://github.com/karlstolley/itmd362-pp.git
fatal: remote upstream already exists.

[root@localhost ~]# mkdir projects_itmd362
[root@localhost ~]# cd projects_itmd362
[root@localhost projects_itmd362]# git init
Initialized empty Git repository in /root/projects_itmd362/.git/
[root@localhost projects_itmd362]# git remote add upstream https://github.com/karlstolley/itmd362-pp.git
[root@localhost projects_itmd362]# git remote -v
upstream	https://github.com/karlstolley/itmd362-pp.git (fetch)
upstream	https://github.com/karlstolley/itmd362-pp.git (push)
[root@localhost projects_itmd362]# git fetch upstream
remote: Counting objects: 19, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 19 (delta 0), reused 0 (delta 0), pack-reused 15
Unpacking objects: 100% (19/19), done.
From https://github.com/karlstolley/itmd362-pp
 * [new branch]      master     -> upstream/master
[root@localhost projects_itmd362]# git checkout master
Branch master set up to track remote branch master from upstream.
Already on 'master'
[root@localhost projects_itmd362]# git merge upstream/master
Already up-to-date.
[root@localhost projects_itmd362]# git status
On branch master
Your branch is up-to-date with 'upstream/master'.

nothing to commit, working directory clean
[root@localhost projects_itmd362]# git add . 
[root@localhost projects_itmd362]# git commit -m "first revise"
On branch master
Your branch is up-to-date with 'upstream/master'.

nothing to commit, working directory clean
[root@localhost projects_itmd362]# git remote add origin https://github.com/RileyDaria/itmd-362.git
[root@localhost projects_itmd362]# git remote -v
origin	https://github.com/RileyDaria/itmd-362.git (fetch)
origin	https://github.com/RileyDaria/itmd-362.git (push)
upstream	https://github.com/karlstolley/itmd362-pp.git (fetch)
upstream	https://github.com/karlstolley/itmd362-pp.git (push)
[root@localhost projects_itmd362]# git push origin master
Username for 'https://github.com': RileyDaria
Password for 'https://RileyDaria@github.com': 
remote: Repository not found.
fatal: repository 'https://github.com/RileyDaria/itmd-362.git/' not found
[root@localhost projects_itmd362]# git remote add origin https://github.com/RileyDaria/ITMD-362.git
fatal: remote origin already exists.
[root@localhost projects_itmd362]# git remote -vorigin	https://github.com/RileyDaria/itmd-362.git (fetch)
origin	https://github.com/RileyDaria/itmd-362.git (push)
upstream	https://github.com/karlstolley/itmd362-pp.git (fetch)
upstream	https://github.com/karlstolley/itmd362-pp.git (push)
[root@localhost projects_itmd362]# git push origin masterUsername for 'https://github.com': RileyDaria
Password for 'https://RileyDaria@github.com': 
remote: Repository not found.
fatal: repository 'https://github.com/RileyDaria/itmd-362.git/' not found
[root@localhost projects_itmd362]# 


4. Copy below the output from `git remote -v` from within your copy of this
repository:


Next, you need to install Node.js, and possibly also npm, if you don’t have it
already.

5. Copy below the output from `node -v`:
[root@localhost projects_itmd362]# node -v
v0.10.36


6. Copy below all of the output from `npm install http-server -g`:
[root@localhost projects_itmd362]# npm install http-server -g
npm http GET https://registry.npmjs.org/http-server
npm http 200 https://registry.npmjs.org/http-server
npm http GET https://registry.npmjs.org/union
npm http GET https://registry.npmjs.org/ecstatic
npm http GET https://registry.npmjs.org/http-proxy
npm http GET https://registry.npmjs.org/portfinder
npm http GET https://registry.npmjs.org/opener
npm http GET https://registry.npmjs.org/corser
npm http GET https://registry.npmjs.org/colors/1.0.3
npm http GET https://registry.npmjs.org/optimist
npm http 304 https://registry.npmjs.org/ecstatic
npm http 304 https://registry.npmjs.org/union
npm http 304 https://registry.npmjs.org/http-proxy
npm http 200 https://registry.npmjs.org/colors/1.0.3
npm http 304 https://registry.npmjs.org/optimist
npm http 304 https://registry.npmjs.org/opener
npm http 304 https://registry.npmjs.org/portfinder
npm http 304 https://registry.npmjs.org/corser
npm http GET https://registry.npmjs.org/colors/-/colors-1.0.3.tgz
npm http 200 https://registry.npmjs.org/colors/-/colors-1.0.3.tgz
npm http GET https://registry.npmjs.org/async/0.9.0
npm http GET https://registry.npmjs.org/mkdirp
npm http GET https://registry.npmjs.org/eventemitter3
npm http GET https://registry.npmjs.org/requires-port
npm http 200 https://registry.npmjs.org/async/0.9.0
npm http 200 https://registry.npmjs.org/mkdirp
npm http 304 https://registry.npmjs.org/eventemitter3
npm http 304 https://registry.npmjs.org/requires-port
npm http GET https://registry.npmjs.org/async/-/async-0.9.0.tgz
npm http 200 https://registry.npmjs.org/async/-/async-0.9.0.tgz
npm http GET https://registry.npmjs.org/minimist
npm http GET https://registry.npmjs.org/wordwrap
npm http 304 https://registry.npmjs.org/minimist
npm http 304 https://registry.npmjs.org/wordwrap
npm http GET https://registry.npmjs.org/qs
npm http 200 https://registry.npmjs.org/qs
npm http GET https://registry.npmjs.org/he
npm http GET https://registry.npmjs.org/mime
npm http GET https://registry.npmjs.org/url-join/0.0.1
npm http 304 https://registry.npmjs.org/he
npm http 200 https://registry.npmjs.org/mime
npm http 304 https://registry.npmjs.org/url-join/0.0.1
npm http GET https://registry.npmjs.org/minimist/0.0.8
npm http 304 https://registry.npmjs.org/minimist/0.0.8
/bin/http-server -> /lib/node_modules/http-server/bin/http-server
/bin/hs -> /lib/node_modules/http-server/bin/http-server
npm WARN unmet dependency /lib/node_modules/block-stream requires inherits@'~2.0.0' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/fstream requires inherits@'~2.0.0' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/fstream-ignore requires inherits@'2' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/fstream-npm requires inherits@'2' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/glob requires inherits@'2' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/npmconf requires inherits@'~2.0.0' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
npm WARN unmet dependency /lib/node_modules/tar requires inherits@'2' but will load
npm WARN unmet dependency undefined,
npm WARN unmet dependency which is version undefined
http-server@0.8.5 /lib/node_modules/http-server
├── opener@1.4.1
├── corser@2.0.0
├── http-proxy@1.12.0 (eventemitter3@1.1.1, requires-port@0.0.1)
├── colors@1.0.3
├── optimist@0.6.1 (wordwrap@0.0.3, minimist@0.0.10)
├── union@0.4.4 (qs@2.3.3)
├── ecstatic@0.7.6 (url-join@0.0.1, mime@1.3.4, minimist@1.2.0, he@0.5.0)
└── portfinder@0.4.0 (async@0.9.0, mkdirp@0.5.1)
[root@localhost projects_itmd362]# 

